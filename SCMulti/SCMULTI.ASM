; SOUTHERN CROSS MULTI FUNCTION PROGRAM
; FOR LED OUTPUTS ON PORT $80
; USING SCNEO ROM
; FOR EDUCATIONAL USES ONLY -- TEACHING BINARY
; VERSION 1.0
; ASSEMBLED WITH Z80ASM (SLR SYSTEMS)
; SWITCHES SELECT DIFFERENT OPTIONS
; 0 (VAL1) -- PORT REFLECTOR -- DISPLAY SWITCH STATUS
; 1 (VAL2) -- BINARY COUNTER
;		SWITCH 6 PAUSES COUNTER
;		SWITCH 7 RESETS COUNTER (OR SHUT OFF SWITCH 1)
; 2 (VAL4) -- BACK AND FORTH (CYLON)
; 3 (VAL8) -- SIMPLE COUNTER
;		SWITCH 7 COUNTS -- SHUT OFF SWITCH 3 TO RESET
; 4 (VAL16) -- EXIT (CALL 28H)
; GNU GPL LICENSE V3

; -- RICKY BRYCE

; ** BEGIN PROGRAM HEADER -- DECLARATIONS **
BINCTDLYH:	EQU 03H		; HIGH BYTE OF TIMER DELAY
BINCTDLYL:	EQU 85H		; LOW BYTE OF TIMER DELAY
BINCTDLYF:	EQU 01H		; FINE TUNE FOR TIMER DELAY
CYLONDLYH:	EQU 00H		; HIGH BYTE OF CYLON DELAY
CYLONDLYL:	EQU 81H		; LOW BYTE OF CYLON DELAY
CYLONDLYF:	EQU 01H		; FINE TUNE FOR CYLON DELAY
INNERDLY:	EQU 01H		; INNER DELAY LOOP (VERY COARSE)
OUTPORT:	EQU 80H		; PORT FOR LEDS ON I/O MODULE
INPORT:		EQU 81H		; PORT FOR SWITCHES ON I/O MODULE
; ** END PROGRAM HEADER -- DECLARATIONS **

	ORG 2000H ; SOUTHERN CROSS PROGRAMS START AT 2000H

; ** BEGIN INITIALIZE **
INIT:
	LD A,00H	; LOAD 0 TO ACCUMULATOR
	LD HL,00H	; CLEAR HL REGISTER
	LD (MODE),A	; START WITH A CLEAR MODE
	LD (COUNTER),A	; START COUNTER AT ZERO
	LD (CTRONS),A	; START COUNTER ONE SHOT AT 0
	LD A,00H	; TURN ALL BITS OFF IN A
	OUT (OUTPORT),A	; SHUT OFF ALL LIGHTS (1=OFF)
; ** END INITIALIZE **

; ** BEGIN MAIN ROUTINE **
MAIN:
	CALL MODESET

	LD A,(MODE)	; CHK MODE ZERO (NO MODE)
	OR A
	JR Z,MAIN

	LD A,(MODE)	; CHK MODE 1 (PORT REFLECTOR)
	CP 1
	JP Z,PORTREF

	LD A,(MODE)	; CHK MODE 2 (BINARY COUNTER)
	CP 2
	JP Z,BINCT

	LD A,(MODE)	; CHK MODE 4 (CYLON)
	CP 4
	JP Z,CYLON

	LD A,(MODE)	; CHK MODE 8 (SIMPLE COUNTER)
	CP 8
	JP Z,SCOUNTER

	LD A,(MODE)	; CHK MODE 16D 10H (EXIT TO CPM)
	CP 10H
	RST 28H		; EXIT TO MONITOR

	JR MAIN		; INVALID MODE 

; ** END MAIN ROUTINE **

; ** BEGIN PORT REFLECTOR ROUTINE **
PORTREF:
	IN A,(INPORT)	; GET THE SWITCHES
	;XOR 0FFH	; REVERSE THE VALUE
	OUT (OUTPORT),A	; SEND THEM TO THE LIGHTS
	IN A,(INPORT)	; GET THE SWITCHES AGAIN
	OR A		; CHECK IF ZERO
	JR NZ,PORTREF	; IF NOT ZERO, STAY IN ROUTINE
	JP MAIN		; OTHERWISE, GO BACK TO MAIN 
; ** END PORT REFLECTOR ROUTINE **

; ** BEGIN BINARY COUNTER ROUTINE **
BINCT:
	LD A,00H	; LD ZERO TO ACCUMULATOR
	LD (COUNTER),A	; START COUNTER AT ZERO
RNBCTR:
	LD A,(COUNTER)	; LOAD THE COUNTER VALUE TO A
	;XOR 0FFH	; REVERSE ALL BITS
	OUT (OUTPORT),A	; SEND VALUE TO LEDS
	LD A,(COUNTER)	; LOAD A FROM COUNTER MEMORY
	INC A		; INCREMENT ACCUMULATOR
	LD (COUNTER),A	; STORE NEXT VALUE TO COUNTER

	LD H,BINCTDLYH	; LOAD HIGH BYTE TO H
	LD L,BINCTDLYL	; LOAD LOW BYTE TO L
	LD C,BINCTDLYF	; LOAD FINE TUNE BYTE TO C
	CALL DELAY	; CALL THE DELAY LOOP

	IN A,(INPORT)	; CHECK THE SWITCHES
	OR A		; CHECK A FOR ZERO
	JR NZ,SW7	; IF NOT ZERO, THEN CHECK THE VALUES

	LD A,00H	; LOAD ZERO TO A
	OUT (OUTPORT),A	; ZERO THE DISPLAY
	LD A,00H	; LOAD A WITH ZERO
	LD (COUNTER),A	; CLEAR THE COUNTER -- CLEAN UP
	JP MAIN		; EXIT TO MAIN ROUTINE
SW7:
	IN A,(INPORT)	; RELOAD A WITH SWITCH VALUES
	AND A,80H	; CHECK TO SEE IF SWITCH 7 IS ON
	JP NZ,BINCT	; IF SO, THEN RESET THE COUNTER
SW6:
	IN A,(INPORT)	; RELOAD A WITH SWITCHES
	AND 40H		; CHECK TO SEE IF SWITCH 6 IS ON
	JR NZ,SW6	; HOLD HERE (PAUSE BINARY COUNTER)

	JP RNBCTR	; KEEP RUNNING
; ** END BINARY COUNTER ROUTINE **

; ** BEGIN CYLON ROUTINE **
CYLON:
	LD H,CYLONDLYH	; LOAD HIGH BYTE OF TIMER
	LD L,CYLONDLYL	; LOAD LOW BYTE OF TIMER
	LD C,CYLONDLYF	; LOAD CYLON DELAY FINE
	LD A,01H	; LOAD A WITH $01
	LD (COUNTER),A	; LOAD COUNTER VALUE WITH $01
	;XOR 0FFH	; REVERSE ALL LIGHTS
	OUT (OUTPORT),A	; TURN ON LIGHT #0
	CALL DELAY	; CALL THE DELAY LOOP
CYLFT:
	IN A,(INPORT)	; GET THE SWITCHES
	OR A		; SEE IF ALL SWITCHES ARE OFF
	JP NZ,CYLFT1	; IF SO, GO BACK TO MAIN
	LD A,00H	; OTHERWISE START CLEANUP -- LOAD 0 TO A
	LD (COUNTER),A	; RESET THE COUNTER
	JP MAIN		; BACK TO MAIN
CYLFT1:
	LD A,(COUNTER)	; RELOAD A WITH COUNTER
	RLA		; ROTATE LEFT
	LD (COUNTER),A	; STORE A TO COUNTER MEMORY
	;XOR 0FFH	; FLIP ALL BITS
	OUT (OUTPORT),A	; SEND COUNTER TO LEDS

	LD H,CYLONDLYH	; LOAD HIGH BYTE OF CYLONDELAY
	LD L,CYLONDLYL	; LOAD LOW BYTE OF CYLONDELAY
	LD C,CYLONDLYF	; LOAD CYLON DELAY FINE
	CALL DELAY	; CALL THE DELAY ROUTINE
	LD A,(COUNTER)	; RELOAD A FROM COUNTER
	CP 80H		; CHECK TO SEE IF IT'S 80H
	JR Z,CYRGT	; IF 80H START ROTATING RIGHT
	JR CYLFT
CYRGT:
	IN A,(INPORT)	; GET THE SWITCHES
	OR A		; SEE IF THEY ARE ALL OFF
	JP NZ,CYRGT1	; CONTINUE IF A SWITCH IS ON
	LD A,00H	; OTHERWISE CLEANUP -- LOAD 0 TO A
	LD (COUNTER),A	; RESET COUNTER TO ZERO
	JP MAIN		; BACK TO MAIN
CYRGT1:
	LD A,(COUNTER)	; LOAD A FROM COUNTER
	RRA		; ROTATE RIGHT
	LD (COUNTER),A	; LOAD COUNTER FROM A
	;XOR 0FFH	; REVERSE BITS
	OUT (OUTPORT),A	; SEND TO THE LEDS
	LD H,CYLONDLYH	; LOAD HIGH BYTE OF DELAY
	LD L,CYLONDLYL	; LOAD LOW BYTE OF DELAY
	LD C,CYLONDLYF	; LOAD FINE DELAY
	CALL DELAY	; CALL THE DELAY LOOP
	LD A,(COUNTER)	; RELOAD A FROM COUNTER
	CP 1		; COMPARE WITH 1
	JR Z,CYLFT	; IF SO, THEN ROTATE LEFT
	JR CYRGT	; IF NOT, KEEP ROTATING RIGHT
; ** END CYLON ROUTINE **

; ** BEGIN SIMPLE COUNTER ROUTINE **
SCOUNTER:		; SIMPLE COUNTER
	IN A,(INPORT)	; LOAD A WITH SWITCHES
	OR A		; CHECK IF ZERO
	JP NZ,SCOUNTER1	; IF NOT, CONTINUE
	LD A,00H	; LOAD 0 TO A FOR CLEANUP
	LD (COUNTER),A	; SET COUNTER TO ZERO
	JP MAIN		; GO BACK TO MAIN

SCOUNTER1:
	IN A,(INPORT)	; LOAD A WITH SWITCHES
	AND 80H		; CHECK FOR SWITCH 7
	JR NZ,CHKONS	; IF NOT, THEN LOOP AND WAIT
	LD A,0		; LOAD ZERO TO ACCUMULATOR
	LD (CTRONS),A	; CLEAR ONE SHOT
	JR SCOUNTER	
CHKONS:	
	LD A,(CTRONS)	; LOAD ONE SHOT TO A
	OR A		; CHECK IF ZERO
	JR Z,RNSCTR	; IF ZERO, THEN OK TO ADD 1
	JP SCOUNTER	; START OVER
 
RNSCTR:
	LD A,1		; LOAD VALUE OF 1 TO A
	LD (CTRONS),A	; SET ONESHOT BIT
	LD A,(COUNTER)	; LOAD A WITH COUNTER
	INC A		; INCREMENT A
	LD (COUNTER),A	; STORE INCREMENTED VALUE
	;XOR 0FFH	; REVERSE ALL BITS
	OUT (OUTPORT),A	; SEND COUNTER TO LEDS
	JP SCOUNTER	; BACK TO SCOUNTER LABEL
; ** END SIMPLE COUNTER ROUTINE **

; ** BEGIN DELAY SUBROUTINE **
; USE THE CALL FUNCTION TO CALL DELAY
; ENTRY: HL WILL BE THE COARSE DELAY
;	 C WILL BE THE FINE DELAY
; EXIT: RETURNS ZERO ON HL
;	RETURNS ZERO ON C
DELAY:
	LD B,INNERDLY	; LOAD B WITH 30H FOR INTERNAL LOOP
DELAY1:
	LD A,H		; LOAD A FROM H
	OR L		; OR L WITH H (NOW A)
	JR Z,DLYFINE	; IF ALL BITS ARE CLEARED, RETURN
	DEC HL		; DECREMENT HL REGISTER
DELAY2:
	DJNZ DELAY2	; DEC B AND JUMP UNTIL B=0

	JR DELAY1	; HL WASN'T ZERO, RE-EXECUTE

DLYFINE:
	LD A,C
	OR A
	JR Z,DLYRET
	DEC C
	JR DLYFINE
DLYRET:
			; YOU CAN ADD NOPS HERE FOR MORE FINE TUNING
	RET		; RETURN FROM SUBROUTINE
; ** END DELAY SUBROUTINE **

; ** BEGIN MODE ROUTINE **
MODESET:		;DETECT MODE CHANGE
	IN A,(INPORT)	; GET SWITCHES
	OR A		; SEE IF THEY ARE OFF
	JR Z,SWOFF	; IF SO, SET THE MODE TO 0

	LD A,(MODE)	; LOAD MODE TO A
	OR A		; SEE IF IT'S ZERO
	JR NZ,MODERET   ; IF NOT, THEN RETURN
	
	IN A,(INPORT)	; LOAD A WITH SWITCHES
	LD (MODE),A	; SET THE MODE IN MEMORY
	JR MODERET	; RETURN	

SWOFF:
	LD A,00H	; LOAD 0 TO ACCUMULATOR
	LD (COUNTER),A	; ZERO COUNTER
	LD (MODE),A	; SET MODE TO ZERO
	LD (CTRONS),A	; CLEAR ONESHOT
	LD A,00H	; LOAD A WITH ALL BITS LOW
	OUT (OUTPORT),A	; SHUT ALL LIGHTS OFF
MODERET:
	RET
; ** END MODE ROUTINE **


; ** BEGIN FOOTER -- MEMORY STORAGE **
COUNTER:
	DB 00H
MODE:
	DB 00H
MODECLR:
	DB 00H
CTRONS:
	DB 00H
; ** END FOOTER -- MEMORY STORAGE **
	END
